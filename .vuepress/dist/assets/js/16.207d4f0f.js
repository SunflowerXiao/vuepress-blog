(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{446:function(s,n,a){s.exports=a.p+"assets/img/constructorExtend.46d18a20.png"},447:function(s,n,a){s.exports=a.p+"assets/img/extend.7613ed2b.png"},507:function(s,n,a){"use strict";a.r(n);var t=a(19),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"原型继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原型继承"}},[s._v("#")]),s._v(" 原型继承")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Child.prototype = new Parent()\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"手写-new-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手写-new-函数"}},[s._v("#")]),s._v(" 手写 new 函数")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function myNew(fn, args) {\n    var obj = {}\n    Object.setPrototypeOf(obj, fn.prototype) // 相当于 obj.__proto__ = fn.prototype\n    // 将obj作为this对象，执行函数\n    const result = fn.apply(obj, args)\n    return result instanceof Object ? result : obj\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"原型继承问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原型继承问题"}},[s._v("#")]),s._v(" 原型继承问题")]),s._v(" "),t("blockquote",[t("p",[s._v("如果原型上面有引用属性， 实例化之后的对象，会共享这个引用属性")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Parent() {\n    this.name = 'fish'\n    this.habbits = ['sports']\n    this.getHabbites = function(){\n        return this.habbits\n    }\n}\nParent.prototype.setName = function(name) {\n    this.name = name\n}\nfunction Child() {\n\n}\n/*\n** new Parent() 打印出一个对象，\n{\n    name: 'fish',\n    habbits: ['sports'],\n    getHabbites: fn,\n    __proto__: {\n        setName: ƒ (name)\n        constructor: f Parent()\n    }\n}\n*/\nChild.prototype = new Parent()\nvar c1 = new Child()\nvar c2 = new Child()\nc1.habbits.push('ddd')\nconsole.log(c2.habbits) // 打印出来 [\"sports\", \"ddd\"]， 即使执行的是c1实例，但是c2也共享了这个值\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("h2",{attrs:{id:"构造函数继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构造函数继承"}},[s._v("#")]),s._v(" 构造函数继承")]),s._v(" "),t("p",[s._v("Parent.apply(Child, arguments)")]),s._v(" "),t("h3",{attrs:{id:"手写-bind-apply-call"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手写-bind-apply-call"}},[s._v("#")]),s._v(" 手写 bind,apply, call")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Function.prototype.mycall = function(obj) {\n    const args = Array.from(arguments).slice(1) // 将类数组转化为数组，并且取得剩余参数\n    // call的调用方式是 Fn.apply(target, arguments)\n    // 那么当前this值 就相当于上面的Fn\n    obj = obj || {}\n    obj.fn = this\n    obj.fn(...args) // 传递参数\n    delete obj.fn\n}\n\nFunction.prototype.myApply = function(obj, args) {\n    // call和apply的唯一区别， 参数一个传递数组，一个传递字符串\n    obj = obj || {}\n    obj.fn = this\n    obj.fn(...args)\n    delete obj.fn\n}\n\nFunction.prototype.myBind = function(obj, args) {\n    // 需要注意this的值\n    var self = this\n    return function() {\n        self.apply(context)\n    }\n}\n\n\nfunction applyFunction(names) {\n    this.names = names\n}\nvar a = {a: 1}\napplyFunction.mycall(a, 'fish')\nconst fn = applyFunction.bind(a, 'fish')\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br")])]),t("h3",{attrs:{id:"构造函数继承的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构造函数继承的问题"}},[s._v("#")]),s._v(" 构造函数继承的问题")]),s._v(" "),t("blockquote",[t("p",[s._v("不能继承到父类在原型上面设置的属性")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Parent() {\n    this.myname = 'fish'\n    this.habbits = ['sports']\n    this.getHabbites = function(){\n        return this.habbits\n    }\n}\nParent.prototype.setName = function(name) {\n    this.myname = name\n}\nfunction Child() {\n    Parent.apply(Child, arguments)\n}\n\nvar c1 = new Child()\nconsole.log(c1)\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[t("img",{attrs:{src:a(446),alt:"构造函数继承的问题"}})]),s._v(" "),t("h2",{attrs:{id:"组合继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组合继承"}},[s._v("#")]),s._v(" 组合继承")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Child.prototype = new Parent()\nParent.call(Child, args)\nChild.prototype.constructor = Child\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"组合继承的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组合继承的问题"}},[s._v("#")]),s._v(" 组合继承的问题")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Parent() {\n    this.myname = 'fish'\n    this.habbits = ['sports']\n    this.getHabbites = function(){\n        return this.habbits\n    }\n}\nParent.prototype.setName = function(name) {\n    this.myname = name\n}\nfunction Child() {\n    Parent.apply(Child, arguments)\n}\nChild.prototype = new Parent()\nChild.prototype.constructor = Child\nvar c1 = new Child()\nconsole.log(c1)\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("h2",{attrs:{id:"寄生组合式继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#寄生组合式继承"}},[s._v("#")]),s._v(" 寄生组合式继承")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Child.prototype = Object.create(Parent.prototype)\n\nParent.call(Child, args)\n\nChild.prototype.constructor = Child\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("blockquote",[t("p",[s._v("Child.prototype = Object.create(Parent.prototype) 和 Child.prototype = new Parent()")])]),s._v(" "),t("p",[t("code",[s._v("new Parent()")]),s._v(" 其实就是 在 "),t("code",[s._v("Object.create(Parent.prototype)")]),s._v(" 的基础上有多进行了一次 构造函数继承 （在手写 new 函数中可以看出）， 这一步其实是多余的")]),s._v(" "),t("p",[t("img",{attrs:{src:a(447),alt:"寄生组合式继承"}})])])}),[],!1,null,null,null);n.default=e.exports}}]);