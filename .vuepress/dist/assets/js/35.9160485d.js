(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{493:function(a,s,r){"use strict";r.r(s);var n=r(19),t=Object(n.a)({},(function(){var a=this,s=a.$createElement,r=a._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("p",[a._v("主要都是判断下一个元素是否是数组，如果是数组就使用扩展运算符展开并且[].contact(...arr)")]),a._v(" "),r("h2",{attrs:{id:"es6-array-prototype-flat"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es6-array-prototype-flat"}},[a._v("#")]),a._v(" Es6 Array.prototype.flat")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("/**\n* arr.flat(depth) //默认深度是1\n*/\nvar arr = [1, [2,3,4]];\nconsole.log(arr.flat(1)) // 1,2,3,4\n\nvar arr = [1, [2,[3,4]]];\nconsole.log(arr.flat(2)) // 1,2,3,4\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br")])]),r("h2",{attrs:{id:"如果数组深度只有一层-还可以使用-array-prototype-flatmap-方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如果数组深度只有一层-还可以使用-array-prototype-flatmap-方法"}},[a._v("#")]),a._v(" 如果数组深度只有一层，还可以使用 Array.prototype.flatMap()方法")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v(' var arr = [["今", "天", "天", "气", "不", "错"],[""],["早", "上", "好"]];\n var flatarr = arr.flatMap(item => item);\n console.log(flatarr) // ["今", "天", "天", "气", "不", "错", "", "早", "上", "好"]\n console.log(arr) // [["今", "天", "天", "气", "不", "错"],[""],["早", "上", "好"]];\n')])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br")])]),r("h2",{attrs:{id:"递归-扩展运算符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#递归-扩展运算符"}},[a._v("#")]),a._v(" 递归 + 扩展运算符")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var arr = [1, [2,[3,4]]];\nfunction flattern(arr) {\n    let res = []\n    arr.forEach(item => {\n        if(Array.isArray(item)) {\n            console.log(flattern(item))\n            res = res.push(...flattern(item)) // 将返回的元素通过扩展运算符扁平化  or res = res.concat(flattern(item))\n        } else {\n            res.push(item)\n        }\n    })\n    return res\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br")])]),r("h2",{attrs:{id:"递归-reduce-方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#递归-reduce-方法"}},[a._v("#")]),a._v(" 递归 + reduce 方法")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var arr = [1, [2,[3,4]]];\nfunction flatten(arr) {\n    let res = []\n    arr.reduce(function(pre, next){\n        const result = Array.isArray(next)? flatten(next) : next //递归\n        return [...pre].concat(result)\n    })\n    return res\n}\n\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br")])]),r("h2",{attrs:{id:"array-prototype-concat-array-prototype-some-while-循环"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#array-prototype-concat-array-prototype-some-while-循环"}},[a._v("#")]),a._v(" Array.prototype.concat + Array.prototype.some + while 循环")]),a._v(" "),r("p",[a._v("concat 方法用于合并两个或者多个 (数组/值)")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("const array1 = ['a', 'b', 'c'];\nconst array2 = ['d', 'e', 'f'];\nconst a = 15\nconst array3 = [].concat(array1, array2, a);\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", 15]\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br")])]),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var arr = [1, [2,[3,4]]];\nfunction flattern(arr) {\n    let res = []\n    while(arr.some(item => Array.isArray(item))) {\n        res = [].concat(...item)  //\n    }\n    return res\n}\n\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);