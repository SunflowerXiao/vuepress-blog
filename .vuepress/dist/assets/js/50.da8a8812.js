(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{509:function(t,a,s){"use strict";s.r(a);var r=s(19),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"内存的分配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存的分配"}},[t._v("#")]),t._v(" 内存的分配")]),t._v(" "),s("h3",{attrs:{id:"堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆"}},[t._v("#")]),t._v(" 堆")]),t._v(" "),s("p",[t._v("应用类型指针所指向的内容是存放在堆中")]),t._v(" "),s("h3",{attrs:{id:"栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),s("p",[t._v("值类型的数据都是存在栈中（大小固定）， 引用类型的指针也是存放在栈中")]),t._v(" "),s("h2",{attrs:{id:"内存的优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存的优化"}},[t._v("#")]),t._v(" 内存的优化")]),t._v(" "),s("ul",[s("li",[t._v("手动设置 变量 = null 来释放内存")]),t._v(" "),s("li",[t._v("IIFE")]),t._v(" "),s("li",[t._v("优化 js 方法，使用事件代理，减少闭包等等")])]),t._v(" "),s("h2",{attrs:{id:"内存的释放"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存的释放"}},[t._v("#")]),t._v(" 内存的释放")]),t._v(" "),s("h3",{attrs:{id:"垃圾回收机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制"}},[t._v("#")]),t._v(" 垃圾回收机制")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("计数垃圾收集器")])]),t._v(" "),s("li",[s("p",[t._v("标记清除法")])]),t._v(" "),s("li",[s("p",[t._v("标记 清除 整理法")])])]),t._v(" "),s("h2",{attrs:{id:"内存的分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存的分析"}},[t._v("#")]),t._v(" 内存的分析")]),t._v(" "),s("ul",[s("li",[t._v("chorm 浏览器 shift + esc 打开内存管理器，右键头部可以查看 js 内存")]),t._v(" "),s("li",[t._v("chorm 浏览器 f12 timeline 查看 gc(垃圾回收)执行的频率和执行的时长，内存情况等等")])])])}),[],!1,null,null,null);a.default=v.exports}}]);